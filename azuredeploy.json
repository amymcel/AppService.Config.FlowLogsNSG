{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "EngineerAlias": {
      "type": "string",
      "defaultValue": "MsAlias",
      "metadata": {
        "description": "Engineer Alias (cannot be longer than 15 characters)"
      }
    },
    "clientIpAddress": {
      "type": "string",
      "defaultValue": "0.0.0.0/32",
      "metadata": {
        "description": "The public IPv4 address of your client computer you are working on obtained from www.whatismyip.com"
      }
    }
  },
  "variables": {
    "networkSecurityGroupName": "[concat('NSG-', parameters('EngineerAlias'))]",

    "vnetName": "[concat('VN-', parameters('EngineerAlias'))]",
    "vnetAddressPrefix": "10.201.0.0/16",
    "subnetName1": "default",
    "subnet1AddressPrefix": "10.201.0.0/24",
    "subnetName2": "apps",
    "subnet2AddressPrefix": "10.201.1.0/24",

    "appServicePlanName": "[concat('ASP-',parameters('EngineerAlias'))]",
    "appName": "[concat('APP-', parameters('EngineerAlias'))]",
    "appServicePlanSku": "S1",

    "storageAccountName": "[concat('sa0', toLower(parameters('EngineerAlias')))]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "containerName": "images",
    "containerPath": "format('{0}/default/{1}', variables('storageAccountName'), variables('containerName')",
    "filepath": "https://raw.githubusercontent.com/amymcel/AppService.Config.Advanced.Networking.1/main/moderncat.jpg"
  },
  "resources": [
    // Network Security Group ---------
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ClientIP",
            "properties": {
              "description": "Allow for client only",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "[parameters('clientIpAddress')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHttpsOutbound",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "8.8.8.8/32",
              "access": "Deny",
              "priority": 200,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    // Virutal Network ----------------
    {
      "name": "[variables('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName1')]",
            "properties": {
              "addressPrefix": "[variables('subnet1AddressPrefix')]"
            }
          },
          {
            "name": "[variables('subnetName2')]",
            "properties": {
              "addressPrefix": "[variables('subnet2AddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              },
              "delegations": [
                {
                  "name": "Microsoft.Web.serverFarms",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms",
                    "actions": [
                      "Microsoft.Network/virtualNetworks/subnets/action"
                    ]
                  },
                  "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                }
              ]
            }
          }
        ]
      }
    },

    // Web App -------------------
    {
      "name": "[variables('appServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "properties": {},
      "sku": {
        "name": "[variables('appServicePlanSku')]"
      },
      "kind": "app"
    },
    {
      "name": "[variables('appName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[resourceGroup().location]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName'))]"
      },
      "resources": [
        {
          "name": "virtualNetwork",
          "type": "config",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appName'))]"
          ],
          "properties": {
            "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName2'))]",
            "swiftSupported": true
          }
        }
      ]
    },

    // Storage Account -------------
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "tags": {
        "displayName": "[variables('storageAccountName')]"
      },
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "allowSharedKeyAccess": true,
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('containerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "Blob"
      }
    }  
  ],
  "outputs": {}
}
